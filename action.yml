name: 'Compiler Action'

inputs:
  workernumber:
    required: true
  Nworks:
    required: true
  blenderversion: 
    required: true
  blenderfile:
    required: true
  scene:
    required: false
  startframe:
    required: false
  endframe:
    required: false
    
runs:
  using: "composite"
  steps:
    - name: echos
      shell:
      run: |
        echo "WorkerNumber=${{ inputs.workernumber }}"
        echo "Nworks=${{ inputs.Nworks }}"
        echo "blenderversion=${{ inputs.blenderversion }}"
        echo "blenderfile=${{ inputs.blenderfile }}"
        echo "scene=${{ inputs.scene }}"
        echo "startframe=${{ inputs.startframe }}"
        echo "endframe=${{ inputs.endframe }}"
          
    - name: get blender
      shell: bash
      run: |
        echo "#Get Blender"
        version=3.3.1
        wget -cq https://mirror.clarkson.edu/blender/release/Blender3.3/blender-3.3.1-linux-x64.tar.xz
        echo "#Decompress Blender"
        tar -xf blender-${{ inputs.blenderversion }}-linux-x64.tar.xz

        
#     ##Tmate ##
#     - name: Setup TMATE Session
#       uses: mxschmitt/action-tmate@v3
        
    - name: frames
      shell:
      env:
        startframe: ${{ inputs.startframe }}
        endframe: ${{ inputs.endframe }}
        divisor: ${{ inputs.workernumber }}
      run: |
          #Frames
          if [ -z "$startframe" -a -z "$endframe" ]; then
            startframe=$(blender-${{ inputs.blenderversion }}-linux-x64/blender -b ${{ inputs.blenderfile }} -S ${{ inputs.scene }} -P frames.py | grep frames | sed 's/^.*frames: //' | cut -d " " -f1 | awk -F\. '{print $1}')
            echo "startframe python"
            echo $startframe
            endframe=$(blender-${{ inputs.blenderversion }}-linux-x64/blender -b ${{ inputs.blenderfile }} -S ${{ inputs.scene }} -P frames.py | grep frames | sed 's/^.*frames: //' | cut -d " " -f1 | awk -F\. '{print $3}')
            echo "endframe pyhon"
            echo $endframe
          fi
          #numero total de frames do projeto
          totalframes=$["$endframe" - "$startframe"]
          #numero de frames por seguimento 
          xframe=$["$totalframes" / "${{ inputs.workernumber }}"]
          #gerar lista com os numeros de frames iniciais e finais
          #for (( x="${{ inputs.workernumber }}"; x>=1; x-- )); do  
              fstart=$["$xframe" * "${{ inputs.Nworks }}" - "1" - "$endframe"]
              fend=$["$xframe" - "$fstart" - 1]
              if [ "${{ inputs.Nworks }}" = "${{ inputs.workernumber }}" ]; then
                fstart=$["$fstart" + "1"]
              fi
              divframes="-s $fstart -e $fend"
              echo "divframes=$divframes"
              fmake="${fmake}, $divframes"
              fmakex=$(echo $fmake | sed 's/^, //')
          #done
          echo "startframe"
          echo "endframe"
          echo "Fmake=$fmakex"
#     
#     - name: get dependencies
#       shell: bash
#       run: |
#         #Get Get_Dependencies
#         
#         #render-animação
#         mkdir render-animacao
#         listanimacao=(
#         10min.mkv
#         59seg.mkv
#         pause-dir.mkv
#         pause-esq.mkv
#         play-dir.mkv
#         play-esq.mkv
#         speedup-dir.mkv
#         speedup-esq.mkv
#         )
#         pushd render-animacao
#         for i in "${listanimacao[@]}"; do
#           wget -cq https://github.com/gitbarnabedikartola/big-vs/releases/download/render-animacao/$i
#         done
#         ls -lh
#         popd
#         
#         #capturas
#         mkdir -p capturas
#         listacapturas=(
#         Mortal-Kombat-2.mp4
#         $captura
#         )
#         pushd capturas
#         for i in "${listacapturas[@]}"; do
#           wget -cq https://github.com/gitbarnabedikartola/big-vs/releases/download/capturas/$i
#         done
#         ls -lh
#         popd
#         
#         #upload to github release
#         #gh release create render-animacao --title render-animacao --repo gitbarnabedikartola/big-vs --notes "animação sempre usadas"
#         #for i in *.mkv ; do gh release upload render-animacao --repo gitbarnabedikartola/big-vs --clobber $i; done
#       
#     - name: make
#       shell:
#       run: |
#         #numero de divisões
#         echo "${{ inputs.workernumber }}"
#         #valores do frames todos jundos e separados por ,
#         echo "${{ inputs.divframes }}"
#         
#         intervalo=$(echo "${{ inputs.divframes }}" | cut -d "," -f${{ inputs.workernumber }})
#         #awk -F\, '{print $(echo ${{ inputs.workernumber }})}'
#         echo "$intervalo"
#         
#         blender-${{ inputs.blenderversion }}-linux-x64/blender -b ${{ inputs.blenderfile }} -o // -S 03-montagem $intervalo -a
#         
#         ls -lh
#         
#         echo ${{ github.repository }}
#         
#      # Tmate ##
#      #- name: Setup TMATE Session
#      #  uses: mxschmitt/action-tmate@v3
