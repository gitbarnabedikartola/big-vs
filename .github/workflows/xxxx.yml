name: build
on: 
  workflow_dispatch:
  push:
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      fmatrix: ${{ steps.set-frames.outputs.value }}
    steps:
      - id: set-frames
        # run: echo "::set-output name=value::['a','b','c']"
        run: |
          #frame inicial
          startframe=0
          #frame final
          endframe=3000
          #numero de divis√µes do projeto
          divisor=3
          #numero total de frames do projeto
          totalframes=$["$endframe" - "$startframe"]
          #numero de frames por seguimento 
          xframe=$["$totalframes" / "$divisor"]
          #gerar lista com os numeros de frames iniciais e finais
          for (( x=1; x<="$divisor"; x++ )); do  
              fend=$["$xframe" * "$x"]
              fstart=$["$fend" - "$xframe" + "1"]
              divframes="-s $fstart -e $fend"
              xx=$["$divisor" - "$x" + "1"]
              xxx="$xxx,'$xx'"
              # echo "$xxx" | sed 's/^, //' | sed 's/^/[/' | sed 's/$/]/'
              xxxx=$(echo "$xxx" | sed 's/^,//')
              # echo "matrix=$xxxx" >> $GITHUB_OUTPUT
          done
          # echo "matrix=1" >> $GITHUB_OUTPUT
          # echo "value=['a','b','c']" >> $GITHUB_OUTPUT
          echo "value=[$xxxx]" >> $GITHUB_OUTPUT
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        Nworks: ${{fromJSON(needs.job1.outputs.fmatrix)}}
    steps:
      - run: echo "${{ matrix.Nworks }}"
